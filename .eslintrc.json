{
  "noInlineConfig": true,
  "root": true,
  "env": { "browser": true, "es2020": true, "node": true },
  "ignorePatterns": [
    "dist",
    "build",
    "node_modules",
    ".yarn",
    ".pnp.cjs",
    ".pnp.loader.mjs",
    "prettier.config.js"
  ],
  "plugins": ["promise", "sonarjs", "unicorn", "import", "jsx-a11y", "prettier"],
  "extends": [
    "eslint:recommended",
    "plugin:sonarjs/recommended",
    "plugin:unicorn/recommended",
    "plugin:promise/recommended",
    "airbnb",
    "airbnb/hooks",
    "prettier"
  ],

  "rules": {
    "no-restricted-syntax": 0,
    "func-names": 0,
    "prettier/prettier": "error",
    "unicorn/filename-case": [
      "error",
      {
        "cases": {
          "camelCase": true,
          "pascalCase": true
        }
      }
    ],
    "curly": ["error", "all"],
    "padding-line-between-statements": [
      "error",
      { "blankLine": "always", "prev": "*", "next": "return" },
      {
        "blankLine": "always",
        "prev": ["const", "let", "var"],
        "next": "*"
      },
      {
        "blankLine": "any",
        "prev": ["const", "let", "var"],
        "next": ["const", "let", "var"]
      },
      {
        "blankLine": "any",
        "prev": "directive",
        "next": "directive"
      },
      {
        "blankLine": "always",
        "prev": ["block", "if", "for", "while"],
        "next": "*"
      },
      {
        "blankLine": "always",
        "prev": "*",
        "next": ["if", "for", "while", "block"]
      }
    ]
  },
  "overrides": [
    {
      "files": ["**/*.ts", "**/*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "sourceType": "module",
        "project": ["./tsconfig.json", "./tsconfig.node.json"],
        "ecmaFeatures": {
          "jsx": true
        }
      },
      "plugins": ["react-refresh", "@typescript-eslint", "typescript-sort-keys"],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-type-checked",
        "plugin:@typescript-eslint/stylistic-type-checked",
        "airbnb-typescript"
      ],
      "rules": {
        "react/react-in-jsx-scope": 0,
        "@typescript-eslint/comma-dangle": 0,
        "typescript-sort-keys/interface": "error",
        "typescript-sort-keys/string-enum": "error",
        "@typescript-eslint/indent": 0,
        "@typescript-eslint/no-misused-promises": [
          2,
          {
            "checksVoidReturn": {
              "attributes": false
            }
          }
        ],
        "react-refresh/only-export-components": 0, /// not working https://github.com/ArnaudBarre/eslint-plugin-react-refresh/issues/25
        "react/require-default-props": 0,
        "react/jsx-props-no-spreading": [
          "error",
          {
            "html": "enforce",
            "custom": "enforce",
            "explicitSpread": "enforce",
            "exceptions": ["input", "select", "textarea", "img"]
          }
        ]
      },
      "overrides": [
        {
          "files": ["**/*.d.ts", "**/*.d.tsx"],
          "rules": {
            "typescript-sort-keys/interface": 0,
            "typescript-sort-keys/string-enum": 0,
            "unicorn/filename-case": [
              "error",
              {
                "cases": {
                  "camelCase": true,
                  "kebabCase": true
                }
              }
            ]
          }
        }
      ]
    }
  ],
  "settings": {
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": ["./tsconfig.json", "./tsconfig.node.json"]
      },
      "node": true
    }
  }
}
